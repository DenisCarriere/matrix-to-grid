!function(r,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):r.matrixToGrid=e()}(this,function(){function r(r,e){if(!r)throw new Error("No geometry passed");return{type:"Feature",properties:e||{},geometry:r}}function e(e,t){if(!e)throw new Error("No coordinates passed");if(void 0===e.length)throw new Error("Coordinates must be an array");if(e.length<2)throw new Error("Coordinates must be at least 2 numbers long");if("number"!=typeof e[0]||"number"!=typeof e[1])throw new Error("Coordinates must numbers");return r({type:"Point",coordinates:e},t)}function t(e,t){if(!e)throw new Error("No coordinates passed");for(var o=0;o<e.length;o++){var n=e[o];if(n.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var i=0;i<n[n.length-1].length;i++)if(n[n.length-1][i]!==n[0][i])throw new Error("First and last Position are not equivalent.")}return r({type:"Polygon",coordinates:e},t)}function o(e,t){if(!e)throw new Error("No coordinates passed");return r({type:"LineString",coordinates:e},t)}function n(r){if(!r)throw new Error("No features passed");return{type:"FeatureCollection",features:r}}function i(e,t){if(!e)throw new Error("No coordinates passed");return r({type:"MultiLineString",coordinates:e},t)}function a(e,t){if(!e)throw new Error("No coordinates passed");return r({type:"MultiPoint",coordinates:e},t)}function u(e,t){if(!e)throw new Error("No coordinates passed");return r({type:"MultiPolygon",coordinates:e},t)}function s(e,t){if(!e)throw new Error("No geometries passed");return r({type:"GeometryCollection",geometries:e},t)}function f(r,e){var t=er[e||"kilometers"];if(void 0===t)throw new Error("Invalid unit");return r*t}function l(r,e){var t=er[e||"kilometers"];if(void 0===t)throw new Error("Invalid unit");return r/t}function c(r,e){var t=er[e||"kilometers"];if(void 0===t)throw new Error("Invalid unit");return r/t*57.2958}function d(r,e,t){var o,n,i,a,u,s,f,l,c,h,g=0,p=0,w="FeatureCollection"===r.type,y="Feature"===r.type,m=w?r.features.length:1;for(o=0;m>o;o++)for(c=w?r.features[o].geometry:y?r.geometry:r,h="GeometryCollection"===c.type,f=h?c.geometries.length:1,a=0;f>a;a++)if(s=h?c.geometries[a]:c,l=s.coordinates,g=!t||"Polygon"!==s.type&&"MultiPolygon"!==s.type?0:1,"Point"===s.type)e(l,p),p++;else if("LineString"===s.type||"MultiPoint"===s.type)for(n=0;n<l.length;n++)e(l[n],p),p++;else if("Polygon"===s.type||"MultiLineString"===s.type)for(n=0;n<l.length;n++)for(i=0;i<l[n].length-g;i++)e(l[n][i],p),p++;else if("MultiPolygon"===s.type)for(n=0;n<l.length;n++)for(i=0;i<l[n].length;i++)for(u=0;u<l[n][i].length-g;u++)e(l[n][i][u],p),p++;else{if("GeometryCollection"!==s.type)throw new Error("Unknown Geometry Type");for(n=0;n<s.geometries.length;n++)d(s.geometries[n],e,t)}}function h(r,e,t,o){var n=t;return d(r,function(r,o){n=0===o&&void 0===t?r:e(n,r,o)},o),n}function g(r,e){var t;switch(r.type){case"FeatureCollection":for(t=0;t<r.features.length;t++)e(r.features[t].properties,t);break;case"Feature":e(r.properties,0)}}function p(r,e,t){var o=t;return g(r,function(r,n){o=0===n&&void 0===t?r:e(o,r,n)}),o}function w(r,e){if("Feature"===r.type)e(r,0);else if("FeatureCollection"===r.type)for(var t=0;t<r.features.length;t++)e(r.features[t],t)}function y(r,e,t){var o=t;return w(r,function(r,n){o=0===n&&void 0===t?r:e(o,r,n)}),o}function m(r){var e=[];return d(r,function(r){e.push(r)}),e}function v(r,e){var t,o,n,i,a,u,s,f=0,l="FeatureCollection"===r.type,c="Feature"===r.type,d=l?r.features.length:1;for(t=0;d>t;t++)for(u=l?r.features[t].geometry:c?r.geometry:r,s="GeometryCollection"===u.type,a=s?u.geometries.length:1,n=0;a>n;n++)if(i=s?u.geometries[n]:u,"Point"===i.type||"LineString"===i.type||"MultiPoint"===i.type||"Polygon"===i.type||"MultiLineString"===i.type||"MultiPolygon"===i.type)e(i,f),f++;else{if("GeometryCollection"!==i.type)throw new Error("Unknown Geometry Type");for(o=0;o<i.geometries.length;o++)e(i.geometries[o],f),f++}}function E(r,e,t){var o=t;return v(r,function(r,n){o=0===n&&void 0===t?r:e(o,r,n)}),o}function b(r,e){if(!r)throw new Error("No geometry passed");return{type:"Feature",properties:e||{},geometry:r}}function M(r){if(!r)throw new Error("bbox is required");if(Array.isArray(r)||(r=gr(r)),4!==r.length)throw new Error("bbox must have 4 numbers");var e=r[0],t=r[1],o=r[2],n=r[3];return-180>e&&o>180&&(e=-180,o=180),-180>o&&e>180&&(e=-180,o=180),-90>t&&n>90&&(t=-90,n=90),-90>n&&t>90&&(t=-90,n=90),n>90&&(n=90),-90>t&&(t=-90),Math.abs(r[0]-r[2])>360&&(e=-180,o=180),Math.abs(r[1]-r[3])>180&&(t=-90,n=90),e=x(e),t=T(t),o=x(o),n=T(n),[e,t,o,n]}function P(r){var e;if(!r)throw new Error("center is required");if(Array.isArray(r))if(4===r.length){var t=r,o=t[0],n=t[1],i=t[2],a=t[3];e=[(o+i)/2,(n+a)/2]}else e=[r[0],r[1]];else e=Fr(r).geometry.coordinates;if(2!==e.length)throw new Error("center must have 2 numbers");var u=x(e[0]),s=T(e[1]);return[u,s]}function T(r){if(void 0===r||null===r)throw new Error("lat is required");return(r>90||-90>r)&&(r%=180,r>90&&(r=-180+r),-90>r&&(r=180+r),r===-0&&(r=0)),r}function x(r){if(void 0===r||void 0===r)throw new Error("lng is required");return(r>180||-180>r)&&(r%=360,r>180&&(r=-360+r),-180>r&&(r=360+r),r===-0&&(r=0)),r}function N(r){return r=r||256,2*Math.PI*6378137/r}function C(r){var e=r[0],t=r[1],o=r[2];return(1<<o)*((1<<o)+e)+t}function L(r){var e=r[0],t=r[1],o=r[2],n=r[3],i=(e-o)/2+o,a=(t-n)/2+n;return i=Number(i.toFixed(6)),a=Number(a.toFixed(6)),[i,a]}function k(r,e){r=X(r,e);var t=r[0],o=r[1],n=t*Sr/180,i=Math.log(Math.tan((90+o)*Math.PI/360))/(Math.PI/180);return i=i*Sr/180,n=Number(n.toFixed(1)),i=Number(i.toFixed(1)),[n,i]}function F(r){var e=r[0],t=r[1],o=e/Sr*180,n=t/Sr*180;return n=180/Math.PI*(2*Math.atan(Math.exp(n*Math.PI/180))-Math.PI/2),o=Number(o.toFixed(6)),n=Number(n.toFixed(6)),[o,n]}function q(r,e,t){var o=r[0],n=r[1],i=Y(e,t),a=(o+Sr)/i,u=(n+Sr)/i;return[a,u,e]}function I(r,e,t){r=X(r,t);var o=k(r),n=q(o,e);return B(n)}function G(r,e,t){if(r=X(r,t),0===e)return[0,0,0];var o=I(r,e);return U(o)}function S(r,e){if(0===e)return[0,0,0];var t=q(r,e);return B(t)}function A(r,e){var t=r[0],o=r[1],n=r[2],i=Y(n,e),a=t*i-Sr,u=o*i-Sr;return a=Number(a.toFixed(1)),u=Number(u.toFixed(1)),[a,u]}function B(r,e,t){e=e||256;var o=r[0],n=r[1],i=r[2];if(0===i)return[0,0,0];W(i,t);var a=Math.ceil(o/e)-1,u=Math.ceil(n/e)-1;return 0>a&&(a=0),0>u&&(u=0),[a,u,i]}function z(r,e,t){V(r,t),e=e||256;var o=r[0],n=r[1],i=r[2],a=A([o*e,n*e,i]),u=A([(o+1)*e,(n+1)*e,i]);return[a[0],a[1],u[0],u[1]]}function R(r,e){V(r,e);var t=r[0],o=r[1],n=r[2];if(0===n)return[-180,-85.051129,180,85.051129];var i=z([t,o,n]),a=i[0],u=i[1],s=i[2],f=i[3],l=F([a,u,n]),c=F([s,f,n]);return[l[0],l[1],c[0],c[1]]}function D(r){var e=j(r);return z(e)}function Q(r){var e=j(r);return R(e)}function U(r,e){V(r,e);var t=r[0],o=r[1],n=r[2];if(0===n)return[0,0,0];var i=t,a=Math.pow(2,n)-1-o;return[i,a,n]}function j(r){var e=r[0],t=r[1],o=r[2],n=e,i=Math.pow(2,o)-t-1;return[n,i,o]}function Z(r){var e=j(r);return H(e)}function H(r,e){V(r,e);var t=r[0],o=r[1],n=r[2];if(0===n)return"";var i="";return o=Math.pow(2,n)-1-o,$(n,0,-1).map(function(r){var e=0,n=1<<r-1;0!==(t&n)&&(e+=1),0!==(o&n)&&(e+=2),i=i.concat(e)}),i}function J(r){var e=K(r);return j(e)}function K(r){var e=0,t=0,o=r.length;return $(o,0,-1).map(function(n){var i=1<<n-1;switch(parseInt(r[o-n],0)){case 0:break;case 1:e+=i;break;case 2:t+=i;break;case 3:e+=i,t+=i;break;default:throw new Error("Invalid Quadkey digit sequence")}}),[e,t,o]}function O(r){var e=k([r[0],r[1]]),t=k([r[2],r[3]]);return[e[0],e[1],t[0],t[1]]}function V(r,e){var t=r[0],o=r[1],n=r[2];if(e===!1)return r;if(W(n),void 0===t||null===t)throw new Error("<x> is required");if(void 0===o||null===o)throw new Error("<y> is required");if(0>t)throw new Error("<x> must not be less than 0");if(0>o)throw new Error("<y> must not be less than 0");var i=Math.pow(2,n);if(t>=i||o>=i)throw new Error("Illegal parameters for tile");return r}function W(r){if(r===!1)return r;if(void 0===r||null===r)throw new Error("<zoom> is required");if(0>r)throw new Error("<zoom> cannot be less than 0");if(r>30)throw new Error("<zoom> cannot be greater than 30");return r}function X(r,e){if(e===!1)return r;var t=Gr(r[0]),o=Ir(r[1]);return o>85&&(o=85),-85>o&&(o=-85),[t,o]}function Y(r,e){return N(e)/Math.pow(2,r)}function $(r,e,t){null==e&&(e=r||0,r=0),t||(t=r>e?-1:1);for(var o=Math.max(Math.ceil((e-r)/t),0),n=Array(o),i=0;o>i;i++,r+=t)n[i]=r;return n}function _(r){if(r&&r[0]&&4===r.length&&void 0===r[0][0])return r;if(r&&r[0]&&void 0!==r[0][0]){var e=r[0][0],t=r[0][1],o=r[0][2],n=r[0][3];return r.map(function(r){r[0]<e&&(e=r[0]),r[1]<t&&(t=r[1]),r[2]>o&&(o=r[2]),r[3]>n&&(n=r[3])}),[e,t,o,n]}}function rr(r){try{return V(r),!0}catch(e){return!1}}var er={miles:3960,nauticalmiles:3441.145,degrees:57.2957795,radians:1,inches:250905600,yards:6969600,meters:6373e3,metres:6373e3,kilometers:6373,kilometres:6373,feet:20908792.65},tr={feature:r,featureCollection:n,geometryCollection:s,point:e,multiPoint:a,lineString:o,multiLineString:i,polygon:t,multiPolygon:u,radiansToDistance:f,distanceToRadians:l,distanceToDegrees:c},or=d,nr=h,ir=g,ar=p,ur=w,sr=y,fr=m,lr=v,cr=E,dr={coordEach:or,coordReduce:nr,propEach:ir,propReduce:ar,featureEach:ur,featureReduce:sr,coordAll:fr,geomEach:lr,geomReduce:cr},hr=dr.coordEach,gr=function(r){var e=[1/0,1/0,-(1/0),-(1/0)];return hr(r,function(r){e[0]>r[0]&&(e[0]=r[0]),e[1]>r[1]&&(e[1]=r[1]),e[2]<r[0]&&(e[2]=r[0]),e[3]<r[1]&&(e[3]=r[1])}),e},pr=b,wr=function(r,e){if(!r)throw new Error("No coordinates passed");if(void 0===r.length)throw new Error("Coordinates must be an array");if(r.length<2)throw new Error("Coordinates must be at least 2 numbers long");if("number"!=typeof r[0]||"number"!=typeof r[1])throw new Error("Coordinates must numbers");return b({type:"Point",coordinates:r},e)},yr=function(r,e){if(!r)throw new Error("No coordinates passed");for(var t=0;t<r.length;t++){var o=r[t];if(o.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var n=0;n<o[o.length-1].length;n++)if(o[o.length-1][n]!==o[0][n])throw new Error("First and last Position are not equivalent.")}return b({type:"Polygon",coordinates:r},e)},mr=function(r,e){if(!r)throw new Error("No coordinates passed");return b({type:"LineString",coordinates:r},e)},vr=function(r){if(!r)throw new Error("No features passed");return{type:"FeatureCollection",features:r}},Er=function(r,e){if(!r)throw new Error("No coordinates passed");return b({type:"MultiLineString",coordinates:r},e)},br=function(r,e){if(!r)throw new Error("No coordinates passed");return b({type:"MultiPoint",coordinates:r},e)},Mr=function(r,e){if(!r)throw new Error("No coordinates passed");return b({type:"MultiPolygon",coordinates:r},e)},Pr=function(r,e){if(!r)throw new Error("No geometries passed");return b({type:"GeometryCollection",geometries:r},e)},Tr={miles:3960,nauticalmiles:3441.145,degrees:57.2957795,radians:1,inches:250905600,yards:6969600,meters:6373e3,metres:6373e3,kilometers:6373,kilometres:6373,feet:20908792.65},xr=function(r,e){var t=Tr[e||"kilometers"];if(void 0===t)throw new Error("Invalid unit");return r*t},Nr=function(r,e){var t=Tr[e||"kilometers"];if(void 0===t)throw new Error("Invalid unit");return r/t},Cr=function(r,e){var t=Tr[e||"kilometers"];if(void 0===t)throw new Error("Invalid unit");return r/t*57.2958},Lr={feature:pr,point:wr,polygon:yr,lineString:mr,featureCollection:vr,multiLineString:Er,multiPoint:br,multiPolygon:Mr,geometryCollection:Pr,radiansToDistance:xr,distanceToRadians:Nr,distanceToDegrees:Cr},kr=Lr.point,Fr=function(r){var e=gr(r),t=(e[0]+e[2])/2,o=(e[1]+e[3])/2;return kr([t,o])},qr={bbox:M,longitude:x,latitude:T,center:P},Ir=qr.latitude,Gr=qr.longitude,Sr=2*Math.PI*6378137/2,Ar={hash:C,bboxToCenter:L,lngLatToMeters:k,metersToLngLat:F,metersToPixels:q,lngLatToTile:I,lngLatToGoogle:G,metersToTile:S,pixelsToMeters:A,pixelsToTile:B,tileToBBoxMeters:z,tileToBBox:R,googleToBBoxMeters:D,googleToBBox:Q,tileToGoogle:U,googleToTile:j,googleToQuadkey:Z,tileToQuadkey:H,quadkeyToTile:J,quadkeyToGoogle:K,bboxToMeters:O,validateTile:V,validateZoom:W,validateLngLat:X,resolution:Y,range:$,maxBBox:_,validTile:rr},Br=tr.point,zr=tr.featureCollection,Rr=function(r,e,t,o){if(!r||!Array.isArray(r))throw new Error("matrix is required");if(!e)throw new Error("origin is required");Array.isArray(e)&&(e=Br(e));for(var n=r[0].length,i=r.length,a=1;i>a;a++)if(r[a].length!==n)throw new Error("matrix requires all rows of equal size");o=o||{},o.zProperty=o.zProperty||"elevation","miles"===o.units&&(t*=1.60934),t*=1e3;for(var u=Ar.lngLatToMeters(e.geometry.coordinates),s=u[0],f=u[1],l=[],c=0;i>c;c++){var d=[s,f+t*c],h=Br(Ar.metersToLngLat(d));h.properties[o.zProperty]=r[i-1-c][0];for(var g in o.properties)h.properties[g]=o.properties[g];l.push(h);for(var p=1;n>p;p++){var w=[s+t*p,d[1]],y=Br(Ar.metersToLngLat(w));for(var m in o.properties)y.properties[m]=o.properties[m];var v=r[i-1-c][p];y.properties[o.zProperty]=v,l.push(y)}}var E=zr(l);return E};return Rr});